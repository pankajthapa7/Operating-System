#include <stdio.h>

int main()
{
int bt[20], p[20], wt[20], tat[20], n, total_wt = 0, total_tat = 0;
float avg_wt, avg_tat;
printf("Enter number of processes: ");
scanf("%d", &n);
printf("\nEnter Burst Time:\n");
for (int i = 0; i < n; i++) {
printf("p%d: ", i + 1);
scanf("%d", &bt[i]);
p[i] = i + 1;
}
// sort burst time and process number wrt brust time
for (int i = 0; i < n - 1; i++) {
for (int j = 0; j < n - i - 1; j++) {
if (bt[j] > bt[j + 1]) {
// Swap burst time
int temp = bt[j];
bt[j] = bt[j + 1];
bt[j + 1] = temp;
// Swap process number
temp = p[j];
p[j] = p[j + 1];
p[j + 1] = temp;
}
3
}
}
// Calculate waiting time for each process
wt[0] = 0;
for (int i = 1; i < n; i++) {
wt[i] = wt[i - 1] + bt[i - 1];
total_wt += wt[i];
}
// Calculate turnaround time for each process
for (int i = 0; i < n; i++) {
tat[i] = bt[i] + wt[i];
total_tat += tat[i];
}
// Calculate average waiting time and average turnaround time
avg_wt = (float)total_wt / n;
avg_tat = (float)total_tat / n;
// Print results
printf("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time");
for (int i = 0; i < n; i++) {
printf("\np%d\t\t%d\t\t%d\t\t\t%d", p[i], bt[i], wt[i], tat[i]);
}
printf("\n\nAverage Waiting Time=%.2f", avg_wt);
printf("\nAverage Turnaround Time=%.2f\n", avg_tat);
return 0;
}
